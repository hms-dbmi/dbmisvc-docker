name: Build
description: Builds image for a given target
inputs:
  docker-username:
    description: The DockerHub account username
    required: true
  docker-password:
    description: The DockerHub account password
    required: true
  target:
    description: The build target to build
    required: true
  os-version:
    description: The OS version to the build
    required: true
  python-version:
    description: The Python version to the build
    required: true
  version:
    description: The version of the image to tag
    required: true
  repo:
    description: The base name to use for the image tags
    required: true
  push:
    description: Whether to push the image to Docker Hub
    required: false

runs:
  using: "composite"
  steps:
  - uses: hmarr/debug-action@v2

  - name: Checkout source
    uses: actions/checkout@v2

  - name: Set up Python 3.10
    uses: actions/setup-python@v2
    with:
      python-version: "3.10"

  - name: Install Python packages
    shell: bash
    run: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt

  - name: Login to Docker Hub
    if: inputs.push == 'true'
    uses: docker/login-action@v1
    with:
      username: ${{ inputs.docker-username }}
      password: ${{ inputs.docker-password }}

  - name: Build and push DBMISVC images
    shell: bash
    env:
      PUSH: ${{ fromJson( '["", "--push"]' )[inputs.push == 'true'] }}
    run: |
      # Run the build
      echo "Target: '${{inputs.target}}'"
      echo "OS version: '${{inputs.os-version}}'"
      echo "Python version: '${{inputs.python-version}}'"
      echo "Version: '${{inputs.version}}'"
      echo "Repo: '${{inputs.repo}}'"
      echo "Push: '${PUSH}'"
      python build.py ${{ inputs.target }} \
        --version ${{ inputs.version }} \
        --repo ${{ inputs.repo }} \
        ${PUSH} \
        -- ${{ inputs.os-version }} ${{ inputs.python-version }}
